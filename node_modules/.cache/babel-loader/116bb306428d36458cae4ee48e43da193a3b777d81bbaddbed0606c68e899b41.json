{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Syed Tanees Ahmed\\\\Desktop\\\\Projects\\\\Algorithm\\\\my-app\\\\src\\\\components\\\\InsertionSort.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport \"./Sort.css\";\nimport Button from \"../assets/Button\";\nimport Slider from \"../assets/Slider\";\nimport HeroImage2 from \"./HeroImage2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ARRAYSIZE = 29;\nconst InsertionSort = () => {\n  _s();\n  const [primaryArray, setPrimaryArray] = useState([]);\n  const [animationSpeed, setAnimationSpeed] = useState(50);\n  const [disableOptions, setDisableOptions] = useState(false);\n  const barRefs = useRef([]);\n  useEffect(() => {\n    randomizeArray();\n  }, []);\n  const randomizeArray = () => {\n    let array = [];\n    for (let i = 0; i < ARRAYSIZE; i++) {\n      array.push(randomVals(20, 400));\n    }\n    setPrimaryArray(array);\n  };\n  const randomVals = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  const sleep = milliSeconds => {\n    return new Promise(resolve => setTimeout(resolve, milliSeconds));\n  };\n  const finishedAnimation = async () => {\n    for (let i = 0; i < primaryArray.length; i++) {\n      barRefs.current[i].style.backgroundColor = \"orange\";\n      await sleep(animationSpeed);\n    }\n    setDisableOptions(false);\n  };\n  const handleSorting = () => {\n    setDisableOptions(true);\n    insertionSort();\n  };\n  const insertionSort = async () => {\n    let currentArr = [...primaryArray];\n    let sorted = false;\n    while (!sorted) {\n      for (let i = 1; i < currentArr.length; i++) {\n        let current = currentArr[i];\n        let j = i - 1;\n        while (j >= 0 && currentArr[j] > current) {\n          currentArr[j + 1] = currentArr[j];\n          setPrimaryArray([...currentArr]);\n          barRefs.current[j + 1].style.backgroundColor = \"white\";\n          barRefs.current[j].style.backgroundColor = \"rgb(35, 17, 95)\";\n          await sleep(animationSpeed);\n          barRefs.current[j + 1].style.backgroundColor = \"rgb(35, 17, 95)\";\n          barRefs.current[j].style.backgroundColor = \"rgb(35, 17, 95)\";\n          j--;\n          sorted = false;\n        }\n        currentArr[j + 1] = current;\n        setPrimaryArray([...currentArr]);\n      }\n      sorted = true;\n      if (sorted) finishedAnimation();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeroImage2, {\n      heading: \"Insertion Sort\",\n      text: \"Time Complexity: O(n^2)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"NEWARRAY\",\n        name: \"New Array\",\n        onClick: randomizeArray,\n        disabled: disableOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        onChange: e => setAnimationSpeed(e.target.value),\n        disabled: disableOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSorting,\n        type: \"SORT\",\n        name: \"Sort\",\n        disabled: disableOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortingBars\",\n      children: primaryArray.map((val, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bars\",\n        ref: ref => barRefs.current[key] = ref,\n        style: {\n          height: val\n        }\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(InsertionSort, \"s/zxo6axO3VgfW6F7NbCkMz1a1I=\");\n_c = InsertionSort;\nexport default InsertionSort;\nvar _c;\n$RefreshReg$(_c, \"InsertionSort\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","Footer","Button","Slider","HeroImage2","ARRAYSIZE","InsertionSort","primaryArray","setPrimaryArray","animationSpeed","setAnimationSpeed","disableOptions","setDisableOptions","barRefs","randomizeArray","array","i","push","randomVals","min","max","Math","floor","random","sleep","milliSeconds","Promise","resolve","setTimeout","finishedAnimation","length","current","style","backgroundColor","handleSorting","insertionSort","currentArr","sorted","j","e","target","value","map","val","key","ref","height"],"sources":["C:/Users/Syed Tanees Ahmed/Desktop/Projects/Algorithm/my-app/src/components/InsertionSort.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport \"./Sort.css\";\r\nimport Button from \"../assets/Button\";\r\nimport Slider from \"../assets/Slider\";\r\nimport HeroImage2 from \"./HeroImage2\";\r\n\r\nconst ARRAYSIZE = 29;\r\n\r\nconst InsertionSort = () => {\r\n  const [primaryArray, setPrimaryArray] = useState([]);\r\n  const [animationSpeed, setAnimationSpeed] = useState(50);\r\n  const [disableOptions, setDisableOptions] = useState(false);\r\n  const barRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    randomizeArray();\r\n  }, []);\r\n\r\n  const randomizeArray = () => {\r\n    let array = [];\r\n    for (let i = 0; i < ARRAYSIZE; i++) {\r\n      array.push(randomVals(20, 400));\r\n    }\r\n    setPrimaryArray(array);\r\n  };\r\n\r\n  const randomVals = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const sleep = (milliSeconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliSeconds));\r\n  };\r\n\r\n  const finishedAnimation = async () => {\r\n    for (let i = 0; i < primaryArray.length; i++) {\r\n      barRefs.current[i].style.backgroundColor = \"orange\";\r\n      await sleep(animationSpeed);\r\n    }\r\n    setDisableOptions(false);\r\n  };\r\n\r\n  const handleSorting = () => {\r\n    setDisableOptions(true);\r\n    insertionSort();\r\n  };\r\n\r\n  const insertionSort = async () => {\r\n    let currentArr = [...primaryArray];\r\n    let sorted = false;\r\n\r\n    while (!sorted) {\r\n      for (let i = 1; i < currentArr.length; i++) {\r\n        let current = currentArr[i];\r\n        let j = i - 1;\r\n        while (j >= 0 && currentArr[j] > current) {\r\n          currentArr[j + 1] = currentArr[j];\r\n          setPrimaryArray([...currentArr]);\r\n          barRefs.current[j + 1].style.backgroundColor = \"white\";\r\n          barRefs.current[j].style.backgroundColor = \"rgb(35, 17, 95)\";\r\n          await sleep(animationSpeed);\r\n          barRefs.current[j + 1].style.backgroundColor = \"rgb(35, 17, 95)\";\r\n          barRefs.current[j].style.backgroundColor = \"rgb(35, 17, 95)\";\r\n          j--;\r\n          sorted = false;\r\n        }\r\n        currentArr[j + 1] = current;\r\n        setPrimaryArray([...currentArr]);\r\n      }\r\n      sorted = true;\r\n      if (sorted) finishedAnimation();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <HeroImage2 heading=\"Insertion Sort\" text=\"Time Complexity: O(n^2)\" />\r\n      <div className=\"container3\">\r\n        <Button\r\n          type=\"NEWARRAY\"\r\n          name=\"New Array\"\r\n          onClick={randomizeArray}\r\n          disabled={disableOptions}\r\n        />\r\n        <Slider\r\n          onChange={(e) => setAnimationSpeed(e.target.value)}\r\n          disabled={disableOptions}\r\n        />\r\n        <Button\r\n          onClick={handleSorting}\r\n          type=\"SORT\"\r\n          name=\"Sort\"\r\n          disabled={disableOptions}\r\n        />\r\n      </div>\r\n      <div className=\"sortingBars\">\r\n        {primaryArray.map((val, key) => (\r\n          <div\r\n            className=\"bars\"\r\n            ref={(ref) => (barRefs.current[key] = ref)}\r\n            key={key}\r\n            style={{ height: val }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertionSort;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}