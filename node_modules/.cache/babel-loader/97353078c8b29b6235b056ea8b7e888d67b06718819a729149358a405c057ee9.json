{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Syed Tanees Ahmed\\\\Desktop\\\\Projects\\\\Algorithm\\\\my-app\\\\src\\\\components\\\\InsertionSort.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport \"./Sort.css\";\nimport Button from \"../assets/Button\";\nimport Slider from \"../assets/Slider\";\nimport HeroImage2 from \"./HeroImage2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ARRAYSIZE = 29;\nconst InsertionSort = () => {\n  _s();\n  const [primaryArray, setPrimaryArray] = useState([]);\n  const [animationSpeed, setAnimationSpeed] = useState(50);\n  const [disableOptions, setDisableOptions] = useState(false);\n  const randomizeArray = () => {\n    for (let i = 0; i < primaryArray.length; i++) {\n      let bar = document.getElementById(i).style;\n      bar.backgroundColor = \"#012030\";\n    }\n    let array = [];\n    for (let i = 0; i < ARRAYSIZE; i++) {\n      array.push(randomVals(20, 400));\n    }\n    setPrimaryArray(array);\n  };\n  const randomVals = (min, max) => {\n    let randomVal = Math.floor(Math.random() * (max - min + 1) + min);\n    return randomVal;\n  };\n  useEffect(() => {\n    randomizeArray();\n  }, []);\n  const sleep = milliSeconds => {\n    return new Promise(resolve => setTimeout(resolve, milliSeconds));\n  };\n  const finishedAnimation = async () => {\n    for (let i = 0; i < primaryArray.length; i++) {\n      let bar = document.getElementById(i).style;\n      bar.backgroundColor = \"orange\";\n      await sleep(animationSpeed);\n    }\n    setDisableOptions(false);\n  };\n  const handleSorting = () => {\n    setDisableOptions(true);\n    insertionSort();\n  };\n  const insertionSort = async () => {\n    let currentArr = primaryArray;\n    let sorted = false;\n    while (!sorted) {\n      for (let i = 1; i < currentArr.length; i++) {\n        let current = currentArr[i];\n        let j = i - 1;\n        while (j >= 0 && currentArr[j] > current) {\n          currentArr[j + 1] = currentArr[j];\n          setPrimaryArray([...primaryArray, currentArr]);\n          let bar1 = document.getElementById(j + 1).style;\n          let bar2 = document.getElementById(j).style;\n          bar1.backgroundColor = \"white\";\n          bar2.backgroundColor = \"rgb(35, 17, 95)\";\n          await sleep(animationSpeed);\n          bar1.backgroundColor = \"rgb(35, 17, 95)\";\n          bar2.backgroundColor = \"rgb(35, 17, 95)\";\n          j--;\n          sorted = false;\n        }\n        currentArr[j + 1] = current;\n        setPrimaryArray([...primaryArray, currentArr]);\n      }\n      sorted = true;\n      if (sorted) finishedAnimation();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeroImage2, {\n      heading: \"Insertion Sort\",\n      text: \"Time Complexity : O(n^2)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"NEWARRAY\",\n        name: \"New Array\",\n        onClick: randomizeArray,\n        disabled: disableOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        onChange: e => setAnimationSpeed(e.target.value),\n        disabled: disableOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSorting,\n        type: \"SORT\",\n        name: \"Sort\",\n        disabled: disableOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortingBars\",\n      children: [primaryArray && primaryArray.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bars\",\n          id: key,\n          style: {\n            height: val\n          }\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Values\",\n        children: primaryArray.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(InsertionSort, \"nwNu5KkJFo8Vx7oschro2F0a+Eg=\");\n_c = InsertionSort;\nexport default InsertionSort;\nvar _c;\n$RefreshReg$(_c, \"InsertionSort\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","Button","Slider","HeroImage2","ARRAYSIZE","InsertionSort","primaryArray","setPrimaryArray","animationSpeed","setAnimationSpeed","disableOptions","setDisableOptions","randomizeArray","i","length","bar","document","getElementById","style","backgroundColor","array","push","randomVals","min","max","randomVal","Math","floor","random","sleep","milliSeconds","Promise","resolve","setTimeout","finishedAnimation","handleSorting","insertionSort","currentArr","sorted","current","j","bar1","bar2","e","target","value","map","val","key","height"],"sources":["C:/Users/Syed Tanees Ahmed/Desktop/Projects/Algorithm/my-app/src/components/InsertionSort.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport \"./Sort.css\";\r\nimport Button from \"../assets/Button\";\r\nimport Slider from \"../assets/Slider\";\r\nimport HeroImage2 from \"./HeroImage2\";\r\n\r\nconst ARRAYSIZE = 29;\r\n\r\nconst InsertionSort = () => {\r\n  const [primaryArray, setPrimaryArray] = useState([]);\r\n  const [animationSpeed, setAnimationSpeed] = useState(50);\r\n  const [disableOptions, setDisableOptions] = useState(false);\r\n\r\n  const randomizeArray = () => {\r\n    for (let i = 0; i < primaryArray.length; i++) {\r\n      let bar = document.getElementById(i).style;\r\n      bar.backgroundColor = \"#012030\";\r\n    }\r\n    let array = [];\r\n    for (let i = 0; i < ARRAYSIZE; i++) {\r\n      array.push(randomVals(20, 400));\r\n    }\r\n    setPrimaryArray(array);\r\n  };\r\n\r\n  const randomVals = (min, max) => {\r\n    let randomVal = Math.floor(Math.random() * (max - min + 1) + min);\r\n    return randomVal;\r\n  };\r\n\r\n  useEffect(() => {\r\n    randomizeArray();\r\n  }, []);\r\n\r\n  const sleep = (milliSeconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliSeconds));\r\n  };\r\n\r\n  const finishedAnimation = async () => {\r\n    for (let i = 0; i < primaryArray.length; i++) {\r\n      let bar = document.getElementById(i).style;\r\n      bar.backgroundColor = \"orange\";\r\n      await sleep(animationSpeed);\r\n    }\r\n    setDisableOptions(false);\r\n  };\r\n\r\n  const handleSorting = () => {\r\n    setDisableOptions(true);\r\n    insertionSort();\r\n  };\r\n\r\n  const insertionSort = async () => {\r\n    let currentArr = primaryArray;\r\n    let sorted = false;\r\n\r\n    while (!sorted) {\r\n      for (let i = 1; i < currentArr.length; i++) {\r\n        let current = currentArr[i];\r\n        let j = i - 1;\r\n        while (j >= 0 && currentArr[j] > current) {\r\n          currentArr[j + 1] = currentArr[j];\r\n          setPrimaryArray([...primaryArray, currentArr]);\r\n\r\n          let bar1 = document.getElementById(j + 1).style;\r\n          let bar2 = document.getElementById(j).style;\r\n          bar1.backgroundColor = \"white\";\r\n          bar2.backgroundColor = \"rgb(35, 17, 95)\";\r\n\r\n          await sleep(animationSpeed);\r\n\r\n          bar1.backgroundColor = \"rgb(35, 17, 95)\";\r\n          bar2.backgroundColor = \"rgb(35, 17, 95)\";\r\n\r\n          j--;\r\n          sorted = false;\r\n        }\r\n        currentArr[j + 1] = current;\r\n        setPrimaryArray([...primaryArray, currentArr]);\r\n      }\r\n\r\n      sorted = true;\r\n\r\n      if (sorted) finishedAnimation();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <HeroImage2 heading=\"Insertion Sort\" text=\"Time Complexity : O(n^2)\" />\r\n\r\n      <div className=\"container3\">\r\n        <Button\r\n          type=\"NEWARRAY\"\r\n          name=\"New Array\"\r\n          onClick={randomizeArray}\r\n          disabled={disableOptions}\r\n        />\r\n        <Slider\r\n          onChange={(e) => setAnimationSpeed(e.target.value)}\r\n          disabled={disableOptions}\r\n        />\r\n        <Button\r\n          onClick={handleSorting}\r\n          type=\"SORT\"\r\n          name=\"Sort\"\r\n          disabled={disableOptions}\r\n        />\r\n      </div>\r\n      <div className=\"sortingBars\">\r\n        {primaryArray &&\r\n          primaryArray.map((val, key) => {\r\n            return (\r\n              <div\r\n                className=\"bars\"\r\n                id={key}\r\n                key={key}\r\n                style={{ height: val }}\r\n              ></div>\r\n            );\r\n          })}\r\n        <div className=\"Values\">\r\n          {primaryArray.map((val) => {\r\n            return <h5>{val}</h5>;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertionSort;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}